@model Domain.Models.LineaPedidoC.mCLineaPedido

<div class="row">
    <div class="col-xs-8">
        <div class="box box-info">
            <div class="box-header with-border">
                <h3 class="box-title">Info. pedido [cliente]</h3>
            </div><!-- /.box-header -->
            <div class="box-body">
                @Html.Action("Details", "PedidoC", new { id = Model.Num_ped })
            </div>

        </div>
    </div>

    <div class="col-xs-4">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Añadir producto </h3>
            </div><!-- /.box-header -->
            <div class="box-body">

                @using (Html.BeginForm("Create", "LineaPedidoC", FormMethod.Post))
                {
                    @Html.HiddenFor(model => model.Num_ped)
                    
                    @*@Html.Hidden("Unidades","")*@

                    <div id="Detalle" class="col-xs-12">
                        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger alert-dismissable", style = "margin:10px;" })

                        <div class="form-horizontal">

                            <div class="form-group">
                                <small>@Html.LabelFor(model => model.IdArticulo, htmlAttributes: new { @class = "control-label col-md-2" })</small>
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.IdArticulo, Model.Articulos, "-- Select --", new { @Class = "form-control input-sm", style = "max-width:100%", id= "dropProduct" })
                                    @Html.ValidationMessageFor(model => model.IdArticulo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <small>@Html.LabelFor(model => model.Unidades, htmlAttributes: new { @class = "control-label col-md-2" })</small>
                                <div class="col-md-10">
                                    @Html.Label(Model.Unidades.ToString(), new { @Class = "control-label", style = "padding:3px 4px 2px 4px;", id = "lbUnits" })
                                    <input name="Unidades" type="hidden" id="InputUnits"/>
                                    @Html.ValidationMessageFor(model => model.Unidades, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <small>@Html.LabelFor(model => model.Cantidad, htmlAttributes: new { @class = "control-label col-md-2" })</small>
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.Cantidad, htmlAttributes: new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(model => model.Cantidad, "", new { @class = "text-danger" })
                                </div>
                            </div>




                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    @Html.ActionLink("Back to list", "Index", "PedidoC", null, new { @class = "btn btn-default btn-sm" })
                                    <input type="submit" value="Guardar" class="btn  btn-primary btn-sm" />
                                </div>
                            </div>


                            @*<div class="form-group">
                                <input type="submit" value="Guardar" class="btn btn-primary" />
                            </div>*@

                            @*<small>Unidades disponibles</small><br />
                                <div style="background-color:#e6e6e6;">
                                    @Html.Label("Unidades", , new { @Class = "control-label", style = "padding:3px 4px 2px 4px;", id = "lbUnits" })
                                </div>*@
                        </div>


                    </div>



                }
            </div>
        </div>
    </div>

    <div class="col-xs-12">
        @Html.Action("Index", "LineaPedidoC", new { numPed = Model.Num_ped })
    </div>

</div>


<script type="text/javascript">

    var sizeDivInfo = $("#InfoPed").height();
    var sizeDivDetalle = $("#Detalle").height();

    //alert(sizeDivInfo + " " + sizeDivDetalle)

    if (sizeDivInfo > sizeDivDetalle) {
        $("#Detalle").css({ "height": sizeDivInfo });
    }

    if (sizeDivDetalle > sizeDivInfo) {
        $("#InfoPed").css({ "height": sizeDivDetalle });
    }



    $("#dropProduct").change(function () {
        var dato = $("#dropProduct").val();

        $.ajax({
            type: "POST",
            url: '@Url.Action("getUnits", "Product")',
            data: { id: dato },
            dataType: 'json',
            success: function (data) {
                $("#lbUnits").text(data);
                $("#InputUnits").val(data);
                //$("#Unidades").val(data);
            },
            error: function () {
                $("#lbUnits").text("No hay unidades");
            }
        });


    });

    //$(".customForm").each(function () {

    //    var sizeDivInfo = $(this).children(".col-md-10").height();
    //    var sizeDivDetalle = $(this).children(".col-md-2").height();


    //    if (sizeDiv2 > sizeDiv10) {
    //        if (sizeDiv10 < 200) {
    //            $(this).children(".col-md-2").css({ "height": 300, "overflow-x": "hidden", "overflow-y": "scroll" });
    //        } else {
    //            $(this).children(".col-md-2").css({ "height": sizeDiv10, "overflow-x": "hidden", "overflow-y": "scroll" });
    //        }

    //    }

    //    //alert("Tamaño del div(10): " + result + "/r Tamaño del div(2) : " + sizeDiv);
    //});


    //function SendDataList() {
    //    $("#BrowseForm").submit();
    //}

</script>